; == ACTIONS =============================================================
to check-all-and-swarm
  ask hives[
    if (count (workers-on patch-here) > capacity - 1)[
    swarm-bees
    ]
  ]
end

to swarm-bees
  ask patch-here
  [
    let workers-on-this-patch workers-on self
    
    if ((count workers-on-this-patch) > 6) ; 70% of workers
    [
      let old-queen one-of queens-on myself
      let old-x pxcor
      let old-y pycor
      let old-hive one-of hives-on myself
      
      let next-patch one-of neighbors
      
      if (count hives-on next-patch) > 0
      [ 
        ask other patches
        [
          if(not any? hives-here)
          [set next-patch self]
        ]
      ]
      
      ask next-patch
      [
        let new-x pxcor
        let new-y pycor
        if(count hives-here = 0)
        [
          ; Build a hive at this patch if it's empty.
          build-hives 1

          let new-hive one-of hives-on self

          ; Send 70% of the workers to the new hive.
          ask n-of ((count workers-on-this-patch) * 0.7) workers-on-this-patch
          [
            let life-lost (max-lifespan -  life-remaining)
            set current-hive new-hive
            setxy new-x new-y
            set-max-lifespan self
            set life-remaining (max-lifespan - life-lost)
            ;Problem is here, need to set the bees X Y to the new patches
          ]

          ; Send a new queen to the hive (not technically accurate at the mo
          ; as the swarm would be led by the old hive's queen instead).
          ask old-queen
          [
            set current-hive (new-hive)
            setxy new-x new-y
          ]

          birth-queens 1 old-x old-y old-hive

          ask mites[
            if current-host = NOBODY
            [
              find-new-host self ;catches an error where the bee has no host
            ]
            move-to current-host
          ]
        ]
      ]
    ]
  ]


end

; If a mite is latched onto a bee, diminish the bee's life a little faster.
to nibble-bee
  ask current-host
  [
    ; Reduce the bee's remaining life down by 5 (temp value)
    reduce-bee-life mite-lifespan-impact

    ; If the mite has drained too much the bee will die.
    if(life-remaining <= 0)
    [kill-bee]
  ]

  ; When the bee dies, the mite is taken with it.
  ; (Not accurate right now)
  if(current-host = nobody)
  [kill-mite]
end

; Nudge the bee one week toward its expected life expectancy.
to age-bee
  set life-remaining (life-remaining - 1)

  if(life-remaining <= 0)
  [kill-bee]
end

to find-new-host[this-mite]
  ask this-mite
  [
    ifelse (count workers-here != 0)[
      let new-host (one-of workers-here)
      set current-host new-host
      move-to new-host
    ]
    [kill-mite]
  ]
end

; Birth bees (very placeholder-y)
to bees-reproduce
  ask queens[  
    let queen-x xcor
    let queen-y ycor
    let hive current-hive
    
    ask patch-here
    [birth-workers 3 queen-x queen-y hive]
  ]
end

to reproduce-mites
ask hives[
  ask patch-here
  [birth-mites 1 pxcor pycor (one-of workers-here)]
]
   
end
; == END ACTIONS =========================================================
